plugins {
    id "idea"
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
    id "org.openjfx.javafxplugin" version "0.0.8"
    id 'org.beryx.runtime' version '1.8.0'
    id "com.google.osdetector" version "1.6.2"
    id "org.jlleitschuh.gradle.ktlint" version "9.1.1"
}

group "info.hildegynoid"
version "0.1.2"

repositories {
    mavenCentral()
    jcenter()
}

mainClassName = "info.hildegynoid.transaction.MyApplication"

ext {
    platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

    title = "Transactoon DL"

    koinVersion = "2.0.1"
    kotlinLoggingVersion = "1.7.8"
    logbackVersion = "1.2.3"
    slf4jVersion = "1.7.30"
    okhttpVersion = "4.1.0"
    jsoupVersion = "1.12.1"
    snakeYamlVersion = "1.25"
    junitVersion = "5.5.2"
}

dependencies {
    implementation "org.koin:koin-core:$koinVersion"
    implementation "org.koin:koin-logger-slf4j:$koinVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "io.github.microutils:kotlin-logging:$kotlinLoggingVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "org.slf4j:jul-to-slf4j:$slf4jVersion"

    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttpVersion"
    implementation "org.jsoup:jsoup:$jsoupVersion"

    implementation "org.yaml:snakeyaml:$snakeYamlVersion"

    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation "org.koin:koin-test:$koinVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

test {
    useJUnitPlatform()
}

javafx {
    version = "13"
    modules = ['javafx.controls', 'javafx.fxml']
}

jar {
    dependsOn configurations.runtime
    from {
        (configurations.runtime).collect {  it.isDirectory() ? it : zipTree(it)  }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes (
                'Implementation-Title': title,
                'Implementation-Version': project.version,
                'Main-Class': mainClassName
        )
    }
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    modules = ['java.naming', 'jdk.crypto.ec', 'javafx.base', 'javafx.controls', 'javafx.fxml' ]

    jpackage {
        outputDir = 'installers'
        imageName = 'Transaction DL'
        skipInstaller = true
    }
}

ktlint {
    disabledRules = ["import-ordering"]
}
